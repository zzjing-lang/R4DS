---
title: "Buoy_Students"
format: pdf
editor: visual
---

## Packages to Install

```{r, warning = FALSE, message=FALSE}
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(zoo)
library(tibble)
library(readr)
```

## Compiling all years' data

1.  Try to remember why 2007 is the split year

    NOAA changed the buoy data file structure around 2007. Before 2007, the files usually had 16 or 17 columns. After 2007, the data format changed, with different numbers of columns. That is why 2007 is the “split year.”

2.  Why are using different functions to read data prior and post 2007?

    Because the structure of the files is different. Older files can be read with `read.table()`, while newer files require the more flexible and faster `fread()` from the **data.table** package.

3.  What are some new function you got to know from following code? what do these functions do?

    `scan()`: Reads the first line of the file (the header).

    `add_column()`: Adds a new column to a tibble.

    `fread()`: Fast reading of large text files.

    `setnames()`: Renames the columns of a data.table.

    `coalesce()`: Combines multiple columns, taking the first non-missing value.

    `ymd_h()`: Converts year, month, day, and hour into a POSIXct datetime object.

    `na_if()`: Replaces specific values with `NA`.

```{r, warning=FALSE, message=FALSE}
file_root <- "https://www.ndbc.noaa.gov/view_text_file.php?filename=44013h"
tail <- ".txt.gz&dir=data/historical/stdmet/"

load_buoy_data <- function(year) {
  path <- paste0(file_root, year, tail)

  header <- scan(path, what = 'character', nlines = 1)
  num_columns <- length(header)  

  if (num_columns == 16) {
    buoy <- read.table(path, fill = TRUE, header = TRUE, sep = "")
    buoy <- add_column(buoy, mm = NA, .after = "hh")
    buoy <- add_column(buoy, TIDE = NA, .after = "VIS")

  } else if (num_columns == 17) {
    buoy <- read.table(path, fill = TRUE, header = TRUE, sep = "")
    buoy <- add_column(buoy, TIDE = NA, .after = "VIS")

  } else {
    buoy <- fread(path, header = FALSE, skip = 1, fill = TRUE)
    setnames(buoy, header)
  }

  return(buoy)
}
all_data <- lapply(1985:2024, load_buoy_data)
combined_data <- rbindlist(all_data, fill = TRUE)
```

## Cleaning and Organizing the data

We start by merging all different version of `Year` column. We do same with other columns which are same but having data for certain set of years. We remove the remaining columns after merging them.

Creating datetime column using `lubridate()`

```{r}
combined_data <- combined_data %>%
  mutate(
    YY = as.character(YY),
    `#YY` = as.character(`#YY`),
    YYYY = as.character(YYYY)
  )

# Combine year columns safely using coalesce
combined_data <- combined_data %>%
  mutate(YYYY = coalesce(YYYY, `#YY`, YY))
combined_data <- combined_data %>%
  mutate(BAR = coalesce(as.numeric(BAR), as.numeric(PRES)),  # Convert BAR and PRES to numeric
    WD = coalesce(as.numeric(WD), as.numeric(WDIR)))

combined_data <- combined_data %>%
  select(-TIDE, -TIDE.1, -mm,- WDIR, -PRES,-`#YY`,-YY)

combined_data$datetime <- ymd_h(paste(combined_data$YYYY, combined_data$MM, combined_data$DD, combined_data$hh, sep = "-"))

combined_data <- combined_data %>%
  mutate(across(everything(), 
                ~ na_if(as.numeric(as.character(.)), 99) %>%
                na_if(999) %>%
                na_if(9999)))

#summary(combined_data)
#str(combined_data)
#str(combined_data$datetime)
if (!inherits(combined_data$datetime, "POSIXct")) {
  combined_data$datetime <- ymd_h(paste(combined_data$YYYY, combined_data$MM, combined_data$DD, combined_data$hh, sep = "-"))
}
```

```{r}
combined_data <- combined_data %>%
  mutate(Year = year(datetime))

combined_data <- combined_data %>% select(-YYYY)

yearly_avg_temp <- combined_data %>%
  group_by(Year) %>%
  summarise(
    avg_air_temp = mean(ATMP, na.rm = TRUE),
    avg_water_temp = mean(WTMP, na.rm = TRUE)
  )

# Ensure Year is numeric
yearly_avg_temp$Year <- as.numeric(as.character(yearly_avg_temp$Year))

ggplot(yearly_avg_temp, aes(x = Year)) +
  geom_line(aes(y = avg_air_temp, color = "Air Temperature"), size = 1) +
  geom_line(aes(y = avg_water_temp, color = "Water Temperature"), size = 1) +
  scale_x_continuous(
    breaks = seq(min(yearly_avg_temp$Year, na.rm = TRUE),
                 max(yearly_avg_temp$Year, na.rm = TRUE),
                 2)   # every year
  ) +
  labs(
    title = "Temperature Trends Over Time",
    x = "Year", 
    y = "Temperature (°C)", 
    color = "Legend"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
  )


```

# 

The buoy data format changed after 2007, which required different reading methods.

Long-term trends show that air and water temperature are correlated, both increasing and decreasing together over the years.

There are substantial missing values in some years, which need to be considered before advanced statistical modeling.
